@model IEnumerable<StudentApp.Models.OgrenciOdemeTakvimi>

@{
    ViewData["Title"] = "Ödeme Takvimleri";
  var ogrenciAdi = ViewBag.OgrenciAdi as string;
    var ogrenciId = ViewBag.OgrenciId as long?;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="fas fa-money-check-alt me-2"></i>Ödeme Takvimleri</h2>
     @if (!string.IsNullOrEmpty(ogrenciAdi))
  {
     <p class="text-muted mb-0">
     <i class="fas fa-user me-1"></i>@ogrenciAdi
     </p>
    }
    </div>
    <div>
      @if (ogrenciId.HasValue)
  {
 <a asp-controller="Ogrenciler" asp-action="Index" class="btn btn-secondary me-2">
<i class="fas fa-arrow-left me-1"></i>Öğrencilere Dön
    </a>
  <a asp-action="Create" asp-route-ogrenciId="@ogrenciId" class="btn btn-success">
   <i class="fas fa-plus me-1"></i>Yeni Ödeme Gir
  </a>
     }
      else
        {
  <form asp-action="RecalculateAllBorcs" method="post" class="d-inline me-2">
        @Html.AntiForgeryToken()
   <button type="submit" class="btn btn-info" 
        onclick="return confirm('Tüm öğrencilerin kalan borç tutarını yeniden hesaplamak istediğinizden emin misiniz? Bu işlem birkaç saniye sürebilir.');">
    <i class="fas fa-calculator me-1"></i>Tüm Borçları Yeniden Hesapla
         </button>
  </form>
   <a asp-controller="Ogrenciler" asp-action="Index" class="btn btn-primary">
      <i class="fas fa-users me-1"></i>Öğrenci Seç
     </a>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-body">
      <div class="row g-2 align-items-end">
            <div class="col-md-6">
     <form asp-action="Index" method="get" class="d-flex align-items-end gap-2">
         <div class="flex-grow-1">
    <label class="form-label">Öğrenciye göre filtrele</label>
                <select name="ogrenciId" class="form-select" id="ogrenciFilter">
  <option value="">Tümü</option>
      @if (ViewBag.OgrenciList != null)
      {
       foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.OgrenciList)
        {
 <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
       }
              }
      </select>
        </div>
         <div>
    <button type="submit" class="btn btn-outline-primary"><i class="fas fa-filter me-1"></i>Filtrele</button>
                 </div>
    </form>
            </div>
  <div class="col-md-6 text-md-end">
        <form asp-action="ExportToExcel" method="post" class="d-inline me-2">
        @Html.AntiForgeryToken()
    <input type="hidden" name="ogrenciId" id="exportExcelOgrenciId" value="@(ogrenciId.HasValue ? ogrenciId.ToString() : "")" />
    <button type="submit" class="btn btn-success"><i class="fas fa-file-excel me-1"></i>Excel'e Aktar</button>
          </form>
        <form asp-action="ExportToPdf" method="post" class="d-inline">
      @Html.AntiForgeryToken()
            <input type="hidden" name="ogrenciId" id="exportPdfOgrenciId" value="@(ogrenciId.HasValue ? ogrenciId.ToString() : "")" />
          <button type="submit" class="btn btn-danger"><i class="fas fa-file-pdf me-1"></i>PDF'e Aktar</button>
     </form>
        </div>
        </div>
    </div>
 </div>

<script>
    (function () {
        var ddl = document.getElementById('ogrenciFilter');
   var excelHidden = document.getElementById('exportExcelOgrenciId');
     var pdfHidden = document.getElementById('exportPdfOgrenciId');
        if (ddl && excelHidden && pdfHidden) {
  ddl.addEventListener('change', function () {
             excelHidden.value = ddl.value || '';
       pdfHidden.value = ddl.value || '';
      });
        }
    })();
</script>

@if (Model.Any())
{
var toplamOdenen = Model.Sum(o => o.OdenenTutar);
    var sonBorc = ogrenciId.HasValue 
     ? Model.OrderByDescending(o => o.OdemeTarihi).FirstOrDefault()?.BorcTutari ?? 0
     : (ViewBag.ToplamKalanBorc as decimal? ?? 0);

    <div class="row mb-4">
  <div class="col-md-6">
     <div class="card bg-success text-white">
   <div class="card-body">
     <h5 class="card-title">
 <i class="fas fa-check-circle me-2"></i>Toplam Ödenen
     </h5>
  <h3 class="mb-0"><span style="font-family: Arial, sans-serif;">&#8378;</span> @toplamOdenen.ToString("N2")</h3>
 @if (!ogrenciId.HasValue)
{
 <small>Tüm öğrenciler</small>
         }
     </div>
   </div>
  </div>
        <div class="col-md-6">
     <div class="card bg-danger text-white">
       <div class="card-body">
          <h5 class="card-title">
       <i class="fas fa-exclamation-circle me-2"></i>
    @if (ogrenciId.HasValue)
    {
     <span>Kalan Borç</span>
    }
   else
  {
  <span>Toplam Kalan Borç</span>
  }
  </h5>
  <h3 class="mb-0"><span style="font-family: Arial, sans-serif;">&#8378;</span> @sonBorc.ToString("N2")</h3>
    @if (!ogrenciId.HasValue)
   {
      <small>Tüm aktif öğrenciler</small>
   }
    </div>
    </div>
      </div>
    </div>

    @if (!ogrenciId.HasValue)
    {
    // Öğrenciye göre grupla
        var ogrenciGruplari = Model.GroupBy(o => new { o.OgrenciId, OgrenciAdi = o.Ogrenci.OgrenciAdi, OgrenciSoyadi = o.Ogrenci.OgrenciSoyadi })
  .OrderBy(g => g.Key.OgrenciSoyadi)
  .ThenBy(g => g.Key.OgrenciAdi);

        <div class="accordion" id="ogrenciAccordion">
      @foreach (var grup in ogrenciGruplari)
      {
    var grupId = $"collapse{grup.Key.OgrenciId}";
         var odemeler = grup.OrderBy(o => o.TaksitNo ?? 0).ToList();
 var ogrenciToplamOdenen = odemeler.Sum(o => o.OdenenTutar);
 var ogrenciKalanBorc = odemeler.LastOrDefault()?.BorcTutari ?? 0;
    var odenenTaksitSayisi = odemeler.Count(o => o.Odendi);
         var toplamTaksitSayisi = odemeler.Count;
    var gecikmisTaksitSayisi = odemeler.Count(o => !o.Odendi && o.SonOdemeTarihi.HasValue && o.SonOdemeTarihi.Value.Date < DateTime.Today);

 <div class="accordion-item mb-2">
     <h2 class="accordion-header">
   <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@grupId" aria-expanded="false" aria-controls="@grupId">
       <div class="d-flex justify-content-between align-items-center w-100 me-3">
  <div class="flex-grow-1">
      <i class="fas fa-user me-2"></i>
      <strong>@grup.Key.OgrenciAdi @grup.Key.OgrenciSoyadi</strong>
    @if (gecikmisTaksitSayisi > 0)
       {
    <span class="badge bg-danger ms-2">
       <i class="fas fa-exclamation-triangle me-1"></i>@gecikmisTaksitSayisi Gecikmiş
        </span>
   }
</div>
   <div class="d-flex gap-3">
      <span class="badge bg-primary">@odenenTaksitSayisi / @toplamTaksitSayisi Taksit</span>
        <span class="badge bg-success" style="font-family: Arial, sans-serif;">Ödenen: ₺@ogrenciToplamOdenen.ToString("N0")</span>
     <span class="badge bg-danger" style="font-family: Arial, sans-serif;">Kalan: ₺@ogrenciKalanBorc.ToString("N0")</span>
           </div>
        </div>
         </button>
    </h2>
<div id="@grupId" class="accordion-collapse collapse" data-bs-parent="#ogrenciAccordion">
      <div class="accordion-body p-0">
  <div class="table-responsive">
     <table class="table table-sm table-hover mb-0">
 <thead class="table-light">
     <tr>
<th>Taksit No</th>
      <th>Taksit Tutarı</th>
     <th>Son Ödeme Tarihi</th>
   <th>Ödeme Tarihi</th>
        <th>Ödenen Tutar</th>
  <th>Kalan Borç</th>
 <th>Durum</th>
 <th>Açıklama</th>
         <th class="text-center">İşlemler</th>
</tr>
           </thead>
  <tbody>
       @foreach (var item in odemeler)
      {
    <tr class="@(item.Odendi ? "" : "table-warning")">
 <td>
    @if (item.TaksitNo.HasValue)
 {
   <span class="badge bg-primary">Taksit @item.TaksitNo</span>
 }
         else
             {
 <span class="text-muted">-</span>
      }
        </td>
 <td>
          @if (item.TaksitTutari.HasValue)
    {
     <span class="badge bg-info" style="font-family: Arial, sans-serif;">
     &#8378; @item.TaksitTutari.Value.ToString("N2")
      </span>
    }
       else
      {
       <span class="text-muted">-</span>
  }
    </td>
         <td>
   @if (item.SonOdemeTarihi.HasValue)
       {
     var bugun = DateTime.Today;
         var sonTarih = item.SonOdemeTarihi.Value.Date;
         var gecikmeGunu = (bugun - sonTarih).Days;

        if (!item.Odendi && gecikmeGunu > 0)
 {
 <span class="text-danger">
<i class="fas fa-exclamation-triangle me-1"></i>@item.SonOdemeTarihi.Value.ToString("dd.MM.yyyy")
           <br /><small>(@gecikmeGunu gün gecikme)</small>
         </span>
             }
       else
      {
       <i class="fas fa-calendar-check me-1"></i>@item.SonOdemeTarihi.Value.ToString("dd.MM.yyyy")
   }
  }
   else
       {
   <span class="text-muted">-</span>
  }
      </td>
  <td>
       @if (item.OdemeTarihi.HasValue)
            {
    <i class="fas fa-calendar me-1"></i>@item.OdemeTarihi.Value.ToString("dd.MM.yyyy")
           }
   else
          {
 <span class="text-muted">-</span>
   }
          </td>
      <td>
      <span class="badge bg-success" style="font-family: Arial, sans-serif;">
      &#8378; @item.OdenenTutar.ToString("N2")
 </span>
 </td>
          <td>
        <span class="badge bg-warning text-dark" style="font-family: Arial, sans-serif;">
       &#8378; @item.BorcTutari.ToString("N2")
        </span>
            </td>
  <td>
   @if (item.Odendi)
             {
 <span class="badge bg-success">
      <i class="fas fa-check-circle me-1"></i>Ödendi
</span>
      }
        else
      {
       <span class="badge bg-warning text-dark">
  <i class="fas fa-hourglass-half me-1"></i>Bekliyor
 </span>
  }
  </td>
    <td>
      @if (!string.IsNullOrWhiteSpace(item.Aciklama))
     {
       <small>@item.Aciklama</small>
   }
  else
     {
         <span class="text-muted">-</span>
         }
     </td>
          <td class="text-center">
 <div class="btn-group" role="group">
         <a asp-action="Details" asp-route-id="@item.Id"
      class="btn btn-sm btn-outline-info" title="Detayları Görüntüle">
         <i class="fas fa-eye"></i>
        </a>
   <a asp-action="Edit" asp-route-id="@item.Id"
  class="btn btn-sm btn-outline-warning" title="Düzenle">
         <i class="fas fa-edit"></i>
     </a>
         <a asp-action="Delete" asp-route-id="@item.Id"
  class="btn btn-sm btn-outline-danger" title="Sil">
      <i class="fas fa-trash"></i>
     </a>
   </div>
  </td>
    </tr>
  }
  </tbody>
     </table>
     </div>
         </div>
         </div>
     </div>
    }
        </div>
    }
    else
    {
        // Tek öğrenci görünümü
        <div class="table-responsive">
  <table class="table table-striped table-hover">
  <thead>
    <tr>
<th>Taksit No</th>
   <th>Taksit Tutarı</th>
       <th>Son Ödeme Tarihi</th>
    <th>Ödeme Tarihi</th>
 <th>Ödenen Tutar</th>
 <th>Kalan Borç</th>
         <th>Durum</th>
    <th>Açıklama</th>
               <th class="text-center">İşlemler</th>
        </tr>
 </thead>
                <tbody>
    @foreach (var item in Model.OrderBy(o => o.TaksitNo ?? 0))
            {
 <tr class="@(item.Odendi ? "" : "table-warning")">
    <td>
       @if (item.TaksitNo.HasValue)
      {
              <span class="badge bg-primary">Taksit @item.TaksitNo</span>
    }
        else
       {
    <span class="text-muted">-</span>
   }
 </td>
            <td>
        @if (item.TaksitTutari.HasValue)
          {
          <span class="badge bg-info fs-6" style="font-family: Arial, sans-serif;">
       &#8378; @item.TaksitTutari.Value.ToString("N2")
        </span>
    }
  else
       {
    <span class="text-muted">-</span>
      }
 </td>
   <td>
    @if (item.SonOdemeTarihi.HasValue)
         {
      var bugun = DateTime.Today;
           var sonTarih = item.SonOdemeTarihi.Value.Date;
     var gecikmeGunu = (bugun - sonTarih).Days;

   if (!item.Odendi && gecikmeGunu > 0)
  {
        <span class="text-danger">
      <i class="fas fa-exclamation-triangle me-1"></i>@item.SonOdemeTarihi.Value.ToString("dd.MM.yyyy")
<br /><small>(@gecikmeGunu gün gecikme)</small>
    </span>
   }
   else
     {
        <i class="fas fa-calendar-check me-1"></i>@item.SonOdemeTarihi.Value.ToString("dd.MM.yyyy")
  }
  }
        else
  {
      <span class="text-muted">-</span>
       }
 </td>
      <td>
     @if (item.OdemeTarihi.HasValue)
      {
 <i class="fas fa-calendar me-1"></i>@item.OdemeTarihi.Value.ToString("dd.MM.yyyy")
       }
     else
    {
    <span class="text-muted">-</span>
              }
        </td>
        <td>
    <span class="badge bg-success fs-6" style="font-family: Arial, sans-serif;">
          &#8378; @item.OdenenTutar.ToString("N2")
     </span>
          </td>
   <td>
           <span class="badge bg-warning text-dark fs-6" style="font-family: Arial, sans-serif;">
      &#8378; @item.BorcTutari.ToString("N2")
      </span>
   </td>
    <td>
       @if (item.Odendi)
     {
   <span class="badge bg-success">
     <i class="fas fa-check-circle me-1"></i>Ödendi
      </span>
     }
       else
             {
       <span class="badge bg-warning text-dark">
         <i class="fas fa-hourglass-half me-1"></i>Bekliyor
  </span>
     }
  </td>
        <td>
   @if (!string.IsNullOrWhiteSpace(item.Aciklama))
       {
   <small>@item.Aciklama</small>
     }
             else
           {
         <span class="text-muted">-</span>
      }
 </td>
    <td class="text-center">
    <div class="btn-group" role="group">
     <a asp-action="Details" asp-route-id="@item.Id"
   class="btn btn-sm btn-outline-info" title="Detayları Görüntüle">
      <i class="fas fa-eye"></i>
  </a>
    <a asp-action="Edit" asp-route-id="@item.Id"
          class="btn btn-sm btn-outline-warning" title="Düzenle">
  <i class="fas fa-edit"></i>
   </a>
   <a asp-action="Delete" asp-route-id="@item.Id"
class="btn btn-sm btn-outline-danger" title="Sil">
       <i class="fas fa-trash"></i>
           </a>
       </div>
 </td>
       </tr>
      }
   </tbody>
    </table>
        </div>
    }
}

@section Styles {
<style>
    .accordion-button:not(.collapsed) {
     background-color: #e7f1ff;
        color: #0c63e4;
    }
    
  .accordion-button {
        font-size: 1.1rem;
      padding: 1rem 1.25rem;
    }
    
  .accordion-button:focus {
        box-shadow: none;
     border-color: rgba(0,0,0,.125);
    }
    
    .accordion-item {
   border: 1px solid #dee2e6;
        border-radius: 0.375rem;
    }
    
    .accordion-body {
        padding: 0;
  }
    
    .accordion-button::after {
        margin-left: auto;
 }
    
    /* Gecikmiş taksitleri vurgula */
    tr.table-warning {
   background-color: #fff3cd !important;
    }

    /* Hover efekti */
    .accordion-button:hover {
        background-color: #f8f9fa;
    }
</style>
}
